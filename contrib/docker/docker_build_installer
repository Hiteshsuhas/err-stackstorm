#!/bin/sh
export ERRBOT=errbot

function setup_account
{
    echo -e "\e[93mUser/Group\e[0m"
    mkdir -p /opt/errbot
    addgroup -S $ERRBOT_USER
    adduser -S -g $ERRBOT -h /opt/errbot -s /bin/false $ERRBOT_USER
    chown -R $ERRBOT:$ERRBOT /opt/errbot
}

function install_prod_packages
{
    echo -e "\e[93mPackage\e[0m"
    apk add --no-cache py3-virtualenv python3 git openssl
}

function install_build_packages
{
    install_prod_packages
    apk add --no-cache gcc python3-dev openssl-dev libffi-dev musl-dev
    python3 -m ensurepip
    rm -r /usr/lib/python*/ensurepip
    test ! -e /usr/bin/pip && ln -s pip3 /usr/bin/pip
    test ! -e /usr/bin/python && ln -sf /usr/bin/python3 /usr/bin/python
    test -d /root/.cache && rm -r /root/.cache
}

function install_openssh
{
    echo -e "\e[93mCopy virtualenv to final image\e[0m"
    apk add openssh
    ssh-keygen -b 4096 -t ed25519 -f /etc/ssh/ssh_host_ed25519_key
    echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config

}

function setup_virtual_env
{
    echo -e "\e[93mVirtual Environment\e[0m"
    virtualenv -p python3 /opt/errbot
    source /opt/errbot/bin/activate
}

function install_plugin
{
    GIT_URL="$(echo ${1} | cut -d@ -f1)"
    GIT_BRANCH="$(echo ${1} | cut -d@ -f2)"
    PLUGIN_DIR="$(basename ${GIT_URL} | cut -d. -f1)"
    cd /opt/errbot/plugins
    git clone $GIT_URL
    cd $PLUGIN_DIR
    git checkout $GIT_BRANCH
    pip install -r requirements.txt
    pip install .
}

function install_backend
{
    GIT_URL="$(echo ${1} | cut -d@ -f1)"
    GIT_BRANCH="$(echo ${1} | cut -d@ -f2)"
    BACKEND_DIR="$(basename ${GIT_URL} | cut -d. -f1)"
    cd /opt/errbot/backends
    git clone $GIT_URL
    cd $BACKEND_DIR
    git checkout $GIT_BRANCH
    pip install -r requirements.txt
    pip install .
    pip install trio
    pip install trio-websocket
}

function initialise_errbot
{
    echo -e "\e[93mErrbot initialisation\e[0m"
    cd /opt/errbot
    errbot --init
    cat <<xxEOFxx >/opt/errbot/config.py
import logging
BACKEND = 'Mattermost'
BOT_DATA_DIR = r'/opt/errbot/data'
BOT_EXTRA_PLUGIN_DIR = r'/opt/errbot/plugins'
BOT_EXTRA_BACKEND_DIR = '/opt/errbot/backends'
BOT_PREFIX = '.'

# Gitter
GITTER = {
    'token' : '54537fa855b9a7bbbbbbbbbc568ea7c069d8c34d'
}

# Mattermost
MATTERMOST = {
    # Required
    'team': 'everyone',
    'server': '172.17.0.1',
    # For the login, either
    'login': 'prime',
    'password': 'autobots',
    # Or, if you have a personal access token
    #'token': 'YourPersonalAccessToken',
    # Optional
    'insecure': False, # Default = False. Set to true for self signed certificates
    'scheme': 'http', # Default = https
    'port': 8065, # Default = 8065
    'timeout': 30, # Default = 30. If the webserver disconnects idle connections later/earlier change this value
    'cards_hook': 'incomingWebhookId' # Needed for cards/attachments
}
BOT_IDENTITY=MATTERMOST

# Rocket.Chat
ROCKETCHAT = {
    "server_uri": "",
    "login_username": "",
    "login_password": ""
}

# Err-StackStorm
STACKSTORM = {
    'auth_url': 'https://192.168.7.113/auth/v1',
    'api_url': 'https://192.168.7.113/api/v1',
    'stream_url': 'https://192.168.7.113/stream/v1',

    'verify_cert': False,
    'secrets_store': 'cleartext',
    'api_auth': {
        'user': {
            'name': 'st2admin',
            'password': "winter",
        },
    },
    'rbac_auth': {
        'standalone': {}
    },
    'timer_update': 900, #  Unit: second.  Interval for Errbot to refresh to list of available action aliases.
}

BOT_LOG_FILE = r'/opt/errbot/errbot.log'
BOT_LOG_LEVEL = logging.DEBUG

BOT_ADMINS = ('prime', )

class ROCKETCHAT_CONFIG(object):
    """
    Config object for AoikRocketChatErrbot.
    Config values can be overridden by env variables. Config key `SERVER_URI`
    maps to env variable name `AOIKROCKETCHATERRBOT_SERVER_URI`. Use string
    '0', 'false' or 'no' to mean boolean false in env variable value.
    """
    SERVER_URI = 'ws://172.17.0.1:3000/websocket'
    LOGIN_USERNAME = 'prime'
    LOGIN_PASSWORD = 'autobots'
    PATCH_METEOR_CLIENT = True
    RECONNECT_ENABLED = True

    HEARTBEAT_ENABLED = False
    HEARTBEAT_INTERVAL = 10
    @classmethod
    def _heartbeat_func(cls, backend):
        """
        Heartbeat function.
        :param backend: Backend object.
        :return: None.
        """
        msg = 'Heartbeat: {}'.format(datetime.now().strftime('%H:%M:%S'))
        backend.send_rocketchat_message(
            params={
                'rid': 'GENERAL',
                'msg': msg,
            }
        )
    HEARTBEAT_FUNC = _heartbeat_func
BOT_LOG_LEVEL = logging.DEBUG
xxEOFxx
}

function install_errbot
{
    echo -e "\e[93mErrbot plugins installation\e[0m"
    pip3 install --upgrade pip setuptools
    pip3 install errbot
    initialise_errbot
    mkdir -p /opt/errbot/plugins/
    mkdir -p /opt/errbot/backends/
    for plugin in 'https://github.com/nzlosh/err-stackstorm.git'
    do
        install_plugin $plugin
    done

    for backend in 'https://github.com/nzlosh/err-backend-rocketchat.git@maint_nzlosh' 'https://github.com/nzlosh/err-backend-gitter.git@maint_nzlosh' 'https://github.com/nzlosh/err-backend-discord.git@maint_nzlosh' 'https://github.com/nzlosh/err-backend-mattermost.git@maint_nzlosh'
    do
        install_backend $backend
    done
}

function stage1_build
{
    setup_account
    install_build_packages
    setup_virtual_env
    install_errbot
}

function stage2_build
{
    setup_account
    install_prod_packages
    install_openssh
}

if [ "$1" == "stage1" ]
then
    stage1_build
else
    stage2_build
fi
